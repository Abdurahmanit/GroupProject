syntax = "proto3";

package news;

option go_package = "github.com/Abdurahmanit/GroupProject/gen/go/news;newspb";

import "news/news.proto";
import "news/comment.proto";
import "news/like.proto";

service NewsService {
  // --- News RPCs ---
  rpc CreateNews(CreateNewsRequest) returns (CreateNewsResponse);
  rpc GetNews(GetNewsRequest) returns (GetNewsResponse);
  rpc ListNews(ListNewsRequest) returns (ListNewsResponse);
  rpc UpdateNews(UpdateNewsRequest) returns (UpdateNewsResponse);
  rpc DeleteNews(DeleteNewsRequest) returns (DeleteNewsResponse);

  // --- Comment RPCs ---
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
  rpc GetCommentsForNews(GetCommentsForNewsRequest) returns (GetCommentsForNewsResponse);
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);

  // --- Like RPCs ---
  rpc LikeNews(LikeNewsRequest) returns (LikeNewsResponse);
  rpc UnlikeNews(UnlikeNewsRequest) returns (UnlikeNewsResponse);
  rpc GetLikesCount(GetLikesCountRequest) returns (GetLikesCountResponse);

  // Для достижения 12+ эндпоинтов (11 уже есть, добавим один для примера)
  rpc GetNewsByAuthor(GetNewsByAuthorRequest) returns (ListNewsResponse); // Этот добавим позже, пока можно оставить закомментированным
}

// Определение для нового запроса (пока можно не реализовывать, просто для структуры)
message GetNewsByAuthorRequest {
  string author_id = 1;
  int32 page = 2;
  int32 page_size = 3;
}