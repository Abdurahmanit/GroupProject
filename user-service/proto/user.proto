syntax = "proto3";

package user;

option go_package = "github.com/Abdurahmanit/GroupProject/user-service/proto/user;user";

service UserService {
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc Logout (LogoutRequest) returns (LogoutResponse);
  rpc GetProfile (GetProfileRequest) returns (GetProfileResponse);
  rpc UpdateProfile (UpdateProfileRequest) returns (UpdateProfileResponse);
  rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse);

  // Email verification RPCs and related messages have been removed.

  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse); // User hard-deletes their own account
  rpc DeactivateUser (DeactivateUserRequest) returns (DeactivateUserResponse); // User soft-deletes (deactivates) their own account

  // Admin methods
  rpc AdminDeleteUser (AdminDeleteUserRequest) returns (AdminDeleteUserResponse); // Admin hard-deletes a user
  rpc AdminListUsers (AdminListUsersRequest) returns (AdminListUsersResponse);
  rpc AdminSearchUsers (AdminSearchUsersRequest) returns (AdminSearchUsersResponse);
  rpc AdminUpdateUserRole (AdminUpdateUserRoleRequest) returns (AdminUpdateUserRoleResponse);
  rpc AdminSetUserActiveStatus (AdminSetUserActiveStatusRequest) returns (AdminSetUserActiveStatusResponse); // Admin can activate/deactivate
}

message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message RegisterResponse {
  string user_id = 1; // Will be ObjectID().Hex()
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1; // JWT
}

message LogoutRequest {
  string user_id = 1; // ObjectID().Hex() from JWT
}

message LogoutResponse {
  bool success = 1;
}

message GetProfileRequest {
  string user_id = 1; // ObjectID().Hex() from JWT
}

message GetProfileResponse {
  string user_id = 1;         // ObjectID().Hex()
  string username = 2;
  string email = 3;
  string role = 4;
  // is_email_verified field removed
  bool is_active = 5;         // Field number adjusted
  string created_at = 6;      // RFC3339, field number adjusted
  string updated_at = 7;      // RFC3339, field number adjusted
}

message UpdateProfileRequest {
  string user_id = 1; // ObjectID().Hex() from JWT
  string username = 2;
  string email = 3;
}

message UpdateProfileResponse {
  bool success = 1;
}

message ChangePasswordRequest {
  string user_id = 1; // ObjectID().Hex() from JWT
  string old_password = 2;
  string new_password = 3;
}

message ChangePasswordResponse {
  bool success = 1;
}

// Email verification related messages (Initiate, Confirm, Resend) have been removed.

message DeleteUserRequest { // User hard-deletes their own account
  string user_id = 1; // ObjectID().Hex() from JWT
}

message DeleteUserResponse {
  bool success = 1;
}

message DeactivateUserRequest { // User soft-deletes (deactivates) their own account
  string user_id = 1; // ObjectID().Hex() from JWT
}

message DeactivateUserResponse {
  bool success = 1;
}

message AdminDeleteUserRequest {
  string admin_id = 1; // Admin's ObjectID().Hex() from JWT
  string user_id_to_delete = 2; // Target user's ObjectID().Hex()
}

message AdminDeleteUserResponse {
  bool success = 1;
}

message AdminListUsersRequest {
  string admin_id = 1; // Admin's ObjectID().Hex() from JWT
  int64 skip = 2;
  int64 limit = 3;
}

message AdminListUsersResponse {
  repeated User users = 1;
}

message AdminSearchUsersRequest {
  string admin_id = 1; // Admin's ObjectID().Hex() from JWT
  string query = 2;
  int64 skip = 3;
  int64 limit = 4;
}

message AdminSearchUsersResponse {
  repeated User users = 1;
}

message AdminUpdateUserRoleRequest {
  string admin_id = 1; // Admin's ObjectID().Hex() from JWT
  string user_id_to_update = 2; // Target user's ObjectID().Hex()
  string role = 3;
}

message AdminUpdateUserRoleResponse {
  bool success = 1;
}

message AdminSetUserActiveStatusRequest {
    string admin_id = 1; // Admin's ObjectID().Hex() from JWT
    string user_id = 2;  // Target user's ObjectID().Hex()
    bool is_active = 3;
}

message AdminSetUserActiveStatusResponse {
    bool success = 1;
}

message User { // Used in AdminListUsersResponse, AdminSearchUsersResponse
  string user_id = 1;         // ObjectID().Hex()
  string username = 2;
  string email = 3;
  string role = 4;
  // is_email_verified field removed
  bool is_active = 5;         // Field number adjusted
  string created_at = 6;      // RFC3339, field number adjusted
  string updated_at = 7;      // RFC3339, field number adjusted
}